@model IEnumerable<Neighbors.Models.Product>

@{
	ViewData["Title"] = "Products";
}

<h2>Products To Borrow</h2>

<button type="button" id="modal-trigger" class="btn-transparent" data-toggle="modal">
	Offer Your Product
</button>

@{await Html.RenderPartialAsync("_SearchProductsPartial", new ProductSearch());}


<table class="table">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.Name)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.CategoryId)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.OwnerId)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.BorrowsDays)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Price)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.Name)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.CategoryId)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.OwnerId)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.BorrowsDays)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Price)
				</td>
				<td>
					<!-- <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |-->
					<a asp-action="Details" asp-route-id="@item.Id">I want that !</a> |
					<a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
				</td>
			</tr>
		}
	</tbody>
</table>
