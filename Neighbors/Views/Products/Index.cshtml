@model Neighbors.Models.Product

@{
	ViewData["Title"] = "Products";
}

<h2>Products To Borrow</h2>

<div class="row">
	<button type="button" id="modal-trigger" class="btn-transparent" data-toggle="modal">
		Offer Your Product
	</button> 
	<span class="glyphicon glyphicon-plus"></span>
</div>

@{await Html.RenderPartialAsync("_SearchProductsPartial", new ProductSearch());}

<div class="table-responsive">
	<table class="table table-striped table-hover " id="productsMainTable">
		<thead>
			<tr>
				<th>
					@Html.DisplayNameFor(model => model.Name)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.Category)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.OwnerId)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.BorrowsDays)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.Price)
				</th>
				<th></th>
			</tr>
		</thead>
		<tbody id="productBody">
		</tbody>
	</table>
</div>

<div class="well">
	<div class="row">
		<center>
			<div class="lds-ripple" id="charts-loader"><div></div><div></div></div>
		</center>
	</div>
	<div class="row">
		<div class="col-xs-6">
			<canvas id="products-by-city-chart" class="chartStyle"></canvas>
		</div>
		<div class="col-xs-6">
			<canvas id="products-by-cat-pie" class="pieStyle"></canvas>
		</div>
	</div>
</div>


	<script>
		try {
			getProducts();
			getProductsBy("City");
			getProductsBy("Category");
		}
		catch {
		}
	</script>

